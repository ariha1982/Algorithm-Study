# BOJ_1546_평균
# 난이도: 브론즈1
# 풀이 날짜: 23.08.14
# 풀이 시간: 5분

# How to
'''
전체 과목의 개수를 N으로 받고, 공백으로 구분되어있는 성적을 scores 라는 리스트로 받았다.
max()함수로 최댓값을 뽑고, scores 리스트를 순회하면서 각 점수에 문제에서 주어진 수식대로 계산하여 ANS 변수에 더하였다.
주어진 문제가 평균을 구하는 것이므로, ANS를 전체 과목 수인 N으로 나누어 프린트하였다.
int 끼리 나누면 결과가 int일 것을 고려하여, ANS의 초기값은 float으로 하였다.

문제집을 본 후, 결합법칙에 의해 "더하기 전에 수식을 적용하는 것"과 "더한 후에 한번에 수식을 적용하는 것"의 결과가 같다는 것을 깨달았다.
다만 문제집에서 주어진 것 처럼 나중에 계산하는 것과 내가 푼 것의 메모리/시간 차이는 전혀 없었다.
예상하기로는 sum()함수를 쓰는 거나 내가 for문을 돌려서 더하는 거나 시간이나 효율이 같아 보인다. 그저 코드길이 차이.
'''

# Code
N = int(input())
scores = list(map(int, input().split()))

M = max(scores)
ANS = 0.0

for score in scores:
    ANS += score / M * 100

print(ANS/N)

## 메모리: 31256 KB, 시간: 40 ms